

































interoperability supported by independence from proprietary definitions

there shall be links

4 1 reference
3 1 primer

http://www.ecma-international.org/news/TC45_current_work/OpenXML%20White%20Paper.pdf

http://www.ecma-international.org/publications/standards/Ecma-376.htm

https://en.wikipedia.org/wiki/Office_Open_XML

)

data BodyPart = Paragraph ParagraphStyle [ParPart]
              | ListItem ParagraphStyle String String (Maybe Level) [ParPart]
              | Tbl String TblGrid TblLook [Row]
              | OMathPara [Exp]
              deriving Show

type D = ExceptT DocxError (ReaderT ReaderEnv (State ReaderState))

elemToBody :: NameSpaces -> Element -> D Body
elemToBodyPart :: NameSpaces -> Element -> D BodyPart
elemToParPart :: NameSpaces -> Element -> D ParPart
childElemToRun :: NameSpaces -> Element -> D Run
elemToRunElems

a `Div Attr [Block]` seems to be the only option
ideally i would have a div or a para or a generic container
how does a `D [RunElem]` map to a pandoc element?

there i can refactor in order to get the strings before converting to font

elemToRunElems looks like what i'm looking for
a font seems to be parsed in getSymChar but that's not what i'm looking for
envFont is part of ReaderEnv
w:rFonts is available element-wise

the original motivation for this change is to detect DOCX code blocks that are not marked as such. pandoc expects code to be styled as "SourceCode" but this practice doesn't seem so common in the documents we translate. by using this option we can develop filters that apply the style where a monospaced font (`Courier New` in our case) is found. we can also contribute the styling logic to pandoc but this change is more generic and more likely to be useful for other users and other purposes

it could be a reader option like --font-as-attr
it could be a reader option like --indented-code-classes=CLASSES

it could not get a font parameter
if it was an extension http://pandoc.org/MANUAL.html#extensions

<w:r>
  <w:rPr>
    <w:rFonts
        w:eastAsia="Courier New"
        w:cs="Courier New"
        w:ascii="Courier New"
        w:hAnsi="Courier New"/>
  </w:rPr>
  <w:t>pandoc &lt;percorso/documento&gt; -t rst -o output.rst</w:t>
</w:r>

for example there seems to be an `rFonts` element

from this i might reuse the font face string parsing logic

i think that this is used just for math in some elements
https://en.wikipedia.org/wiki/Symbol_(typeface)
symbol font improvements
https://github.com/jgm/pandoc/pull/1518
the functions in texmath seem to support only a Symbol Font
https://hackage.haskell.org/package/texmath-0.10.1.1/docs/Text-TeXMath-Unicode-Fonts.html

in Docx.Parse the font seems to be used only for decoding
while in Odt.StyleReader the font pitch is used as we want to use the face

Docx.Parse and Odt.StyleReader work with fonts

magari uno script in haskell che ci sviluppiamo noi che usi pandoc come una libreria per manipolare un DOCX formattando un certo font come codice

a font to link with a format should be used in the parser
there is no information about the font in the native

idea che avevo Ã¨: se si riesce a identificare il font, e si usa courier per formattare il codice in DOCX, basterebbe quello per creare la formattazione adeguata in RST

semantic font
